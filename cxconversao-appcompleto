import React, { useState } from 'react';

const markers = [
  { label: "Fala r√°pida e direta", profile: "D" },
  { label: "Fala animada e com hist√≥rias", profile: "I" },
  { label: "Fala pausada e cuidadosa", profile: "S" },
  { label: "Fala t√©cnica e anal√≠tica", profile: "C" },
  { label: "Tom de voz firme e decidido", profile: "D" },
  { label: "Tom de voz expressivo e emocional", profile: "I" },
  { label: "Tom de voz suave e est√°vel", profile: "S" },
  { label: "Tom de voz neutro e racional", profile: "C" },
  { label: "Olhar direto e assertivo", profile: "D" },
  { label: "Sorriso, contato visual constante", profile: "I" },
  { label: "Express√£o calma, receptiva", profile: "S" },
  { label: "Express√£o s√©ria, anal√≠tica", profile: "C" }
];

const suggestions = {
  D: {
    label: "üü• Perfil Dominante",
    approach: "üéØ Seja direto, foque em resultado e ROI",
    trigger: "üî• Resultados tang√≠veis, lideran√ßa, ganho de tempo",
    script: {
      objetivo: {
        caracteristicas: "Pessoa pr√°tica, impaciente e direta.",
        busca: "resultado, ganho de tempo, autoridade e impacto direto",
        evita: "conversa fiada, detalhes excessivos e falta de foco",
        foco: "Isso me d√° resultado? Quanto eu ganho? Em quanto tempo?"
      },
      abertura: {
        titulo: "ABERTURA R√ÅPIDA (CONEX√ÉO)",
        script: "Oi [Nome], tudo certo? Vamos direto ao ponto: essa conversa √© pra identificar se o que temos aqui pode gerar retorno pra voc√™. Fechado?",
        gatilhos: "Controle, autoridade, ROI"
      },
      spin: {
        situacao: {
          titulo: "PERGUNTAS DE SITUA√á√ÉO (SPIN: S)",
          objetivo: "entender rapidamente o cen√°rio atual com foco em n√∫meros e alavancas de resultado",
          perguntas: [
            "Hoje, qual canal ou estrat√©gia mais te traz faturamento?",
            "Quanto voc√™ fatura por m√™s atualmente com isso?",
            "Voc√™ quer crescer quanto nos pr√≥ximos 90 dias?"
          ],
          gatilhos: "Clareza, foco, metas, ROI"
        },
        problema: {
          titulo: "PERGUNTAS DE PROBLEMA (SPIN: P)",
          objetivo: "expor os obst√°culos que impedem performance m√°xima",
          perguntas: [
            "O que exatamente est√° te travando de bater esse n√∫mero?",
            "J√° tentou resolver isso como antes? O que n√£o funcionou?",
            "E o que mais te incomoda em rela√ß√£o a isso hoje?"
          ],
          gatilhos: "Urg√™ncia, dor clara, frustra√ß√£o, desafio"
        },
        implicacao: {
          titulo: "PERGUNTAS DE IMPLICA√á√ÉO (SPIN: I)",
          objetivo: "mostrar as consequ√™ncias da ina√ß√£o com foco em perda de dinheiro, tempo ou autoridade",
          perguntas: [
            "Se isso continuar assim, quanto voc√™ estima que perde por m√™s?",
            "J√° parou pra calcular o impacto disso no seu resultado final?",
            "O que voc√™ deixaria de conquistar se seguir nesse ritmo?"
          ],
          gatilhos: "Custo da ina√ß√£o, urg√™ncia, ROI negativo"
        },
        necessidade: {
          titulo: "PERGUNTAS DE NECESSIDADE DE SOLU√á√ÉO (SPIN: N)",
          objetivo: "ativar o desejo de solu√ß√£o eficaz e direta",
          perguntas: [
            "Se eu te mostrasse uma estrat√©gia com ROI em 30 dias, que elimina esses travamentos, faria sentido pra voc√™?",
            "Qual o cen√°rio ideal pra voc√™ nos pr√≥ximos 60 dias? Se a gente tra√ßar um plano objetivo, te interessa executar com foco?"
          ],
          gatilhos: "Ganho r√°pido, execu√ß√£o, clareza de solu√ß√£o"
        }
      },
      apresentacao: {
        titulo: "APRESENTA√á√ÉO DO M√âTODO",
        script: "Olhando o que voc√™ compartilhou, o m√©todo que a gente trabalha tem foco exatamente nisso: acelerar resultado, com estrutura direta. O que mais tem dado retorno pra perfis como o seu √© [exemplo de caso real com ROI].",
        gatilhos: "Prova, autoridade, resultado financeiro"
      },
      chamada: {
        titulo: "CHAMADA PRA A√á√ÉO",
        script: "Quer seguir nessa linha e ver o plano de a√ß√£o mais direto pra voc√™ bater essa meta em at√© 30 dias?"
      },
      encaminhamento: {
        titulo: "ENCAMINHAMENTO (FECHAMENTO PARCIAL)",
        script: "Se fizer sentido, j√° te coloco no radar do time pra pr√≥xima fase. Posso te passar os pr√≥ximos passos agora?"
      }
    },
    objections: [
      {
        title: "‚ùå J√° tentei de tudo e nada funciona",
        question: "O que exatamente voc√™ tentou e que te fez perder tempo sem retorno?",
        response: "Voc√™ √© algu√©m que j√° sabe o que n√£o funciona. Agora precisa de algo que funcione ‚Äî simples assim. Aqui, a diferen√ßa est√° na execu√ß√£o com m√©todo. Posso te mostrar resultados concretos de quem tamb√©m j√° estava no limite e virou o jogo em semanas."
      },
      {
        title: "‚ùå Mas ser√° que isso serve pra mim?",
        question: "O que exatamente faria voc√™ ter certeza de que isso funciona pra voc√™?",
        response: "Se voc√™ quer evolu√ß√£o real e resultado com clareza, sim, serve pra voc√™. O m√©todo se adapta a quem executa com foco. Posso te mostrar casos de quem chegou aqui com o mesmo perfil que o seu ‚Äî e dobrou o resultado com precis√£o."
      },
      {
        title: "‚ùå Quanto tempo leva pra dar resultado?",
        question: "Em quanto tempo voc√™ espera ver um retorno vis√≠vel? Isso te ajudaria a decidir?",
        response: "Se voc√™ aplica com consist√™ncia, os primeiros resultados v√™m em 30 dias ‚Äî reais, mensur√°veis. J√° vi casos que dobraram faturamento em 21 dias. Posso te mostrar. Mas n√£o √© f√≥rmula m√°gica ‚Äî √© execu√ß√£o com m√©todo."
      },
      {
        title: "‚ùå Eu n√£o tenho dinheiro",
        question: "Se esse investimento voltasse pra voc√™ em dobro, faria sentido agora?",
        response: "A pergunta certa n√£o √© quanto custa ‚Äî mas quanto voc√™ j√° perdeu por n√£o resolver isso. O que voc√™ decide aqui vira retorno, n√£o √© gasto. Te mostro como clientes no seu perfil recuperaram o investimento em semanas."
      },
      {
        title: "‚ùå N√£o tenho tempo pra isso agora",
        question: "O que est√° te tomando mais tempo hoje ‚Äî e que j√° deveria estar resolvido?",
        response: "Exatamente por estar sem tempo √© que voc√™ precisa resolver isso agora. Esse m√©todo te devolve tempo ‚Äî n√£o exige mais. Posso te mostrar como ele elimina tarefas in√∫teis e foca no que gera retorno direto."
      }
    ]
  },
  I: {
    label: "üü® Perfil Influente",
    approach: "üéØ Conecte com emo√ß√£o e energia positiva",
    trigger: "üî• Pertencimento, apoio, entusiasmo, reconhecimento",
    script: {
      objetivo: {
        caracteristicas: "Pessoa carism√°tica, criativa, expressiva e guiada por emo√ß√µes, reconhecimento e conex√£o humana.",
        busca: "pertencimento, ser ouvido, leveza no processo, reconhecimento",
        evita: "conversas t√©cnicas, frieza, falta de empatia, ambientes sem energia",
        foco: "Conex√£o emocional e reconhecimento"
      },
      abertura: {
        titulo: "ABERTURA (WARM-UP + CONEX√ÉO)",
        script: "Oi [Nome]! Que bom falar com voc√™! Primeira coisa: adorei sua energia, j√° deu pra sentir que vai ser uma conversa incr√≠vel. De onde voc√™ t√° falando agora? Me conta um pouco de como est√° o seu dia.",
        tecnica: "T√©cnica FORM (Fam√≠lia, Ocupa√ß√£o, Recrea√ß√£o, Motiva√ß√£o)",
        gatilhos: "Aprecia√ß√£o, emo√ß√£o, espelhamento"
      },
      spin: {
        situacao: {
          titulo: "PERGUNTAS DE SITUA√á√ÉO (SPIN: S)",
          objetivo: "mapear o momento atual de forma leve e emocionalmente engajada",
          perguntas: [
            "Como tem sido sua rotina hoje? Tem conseguido curtir o que faz?",
            "Hoje, o que te deixa mais animado no seu neg√≥cio?",
            "E o que t√° te dando mais dor de cabe√ßa? Aquela parte que voc√™ adoraria delegar ou melhorar‚Ä¶"
          ],
          gatilhos: "Emo√ß√£o, valida√ß√£o, leveza"
        },
        problema: {
          titulo: "PERGUNTAS DE PROBLEMA (SPIN: P)",
          objetivo: "explorar dificuldades sem parecer confronto ‚Äî com empatia e espa√ßo para desabafo",
          perguntas: [
            "J√° teve aquele momento em que voc√™ deu tudo de si‚Ä¶ mas parece que n√£o foi reconhecido? Como voc√™ lidou com isso?",
            "O que mais tem te travado quando voc√™ sente que podia estar indo al√©m?"
          ],
          gatilhos: "Pertencimento, escuta ativa, reconhecimento da jornada"
        },
        implicacao: {
          titulo: "PERGUNTAS DE IMPLICA√á√ÉO (SPIN: I)",
          objetivo: "trazer as consequ√™ncias de forma suave, emocional e relacional",
          perguntas: [
            "E como voc√™ se sente quando d√° o seu melhor e ainda assim parece que n√£o est√° fluindo?",
            "J√° parou pra pensar no quanto isso te desanima ‚Äî at√© mesmo em momentos que voc√™ sabe que √© bom no que faz?"
          ],
          gatilhos: "Empatia, dor emocional, motiva√ß√£o interna"
        },
        necessidade: {
          titulo: "PERGUNTAS DE NECESSIDADE DE SOLU√á√ÉO (SPIN: N)",
          objetivo: "criar uma vis√£o emocional positiva de futuro e ativar o desejo de pertencer a algo maior",
          perguntas: [
            "Se voc√™ tivesse hoje uma estrutura leve, com apoio real, onde voc√™ pudesse focar no que ama fazer‚Ä¶ como isso mudaria sua energia?",
            "E se voc√™ fizesse parte de uma comunidade onde todo mundo se apoia, vibra junto e cresce junto? Isso faria diferen√ßa pra voc√™?"
          ],
          gatilhos: "Comunidade, apoio, proje√ß√£o de futuro, emo√ß√£o positiva"
        }
      },
      apresentacao: {
        titulo: "APRESENTA√á√ÉO DO M√âTODO",
        script: "Voc√™ tem um brilho quando fala, e √© n√≠tido que voc√™ tem muito valor pra entregar. O que a gente faz aqui √© te ajudar a canalizar isso pra gerar resultado ‚Äî com leveza, com estrutura, mas sem te engessar. E o melhor: com gente que vibra junto contigo.",
        gatilhos: "Pertencimento, reconhecimento, esperan√ßa, inspira√ß√£o"
      },
      chamada: {
        titulo: "CHAMADA PRA A√á√ÉO",
        script: "Vamos juntos construir esse pr√≥ximo passo? Quero muito te ver voando com o que voc√™ j√° tem de melhor."
      },
      encaminhamento: {
        titulo: "ENCAMINHAMENTO (FECHAMENTO PARCIAL)",
        script: "Se fizer sentido pra voc√™, j√° te coloco em contato com nosso time pra organizar o plano de a√ß√£o. Pode ser?"
      }
    },
    objections: [
      {
        title: "‚ùå J√° tentei de tudo e nada funciona",
        question: "O que voc√™ sentiu quando percebeu que aquilo que tentou n√£o funcionou?",
        response: "Voc√™ j√° deu tudo de si ‚Äî e isso √© admir√°vel. Mas voc√™ n√£o precisa seguir sozinho(a). Aqui, voc√™ vai ter um ambiente leve, de apoio real, onde voc√™ se sente escutado e parte de algo maior. Posso te apresentar hist√≥rias de pessoas como voc√™ que voltaram a acreditar."
      },
      {
        title: "‚ùå Mas ser√° que isso serve pra mim?",
        question: "O que voc√™ gostaria de sentir pra ter certeza de que est√° no lugar certo?",
        response: "Ningu√©m come√ßa pronto ‚Äî voc√™ s√≥ precisa estar disposto a viver algo novo com apoio. Aqui, voc√™ vai ter espa√ßo, acolhimento e troca. E vai se surpreender com a leveza de se sentir parte de algo que realmente te fortalece."
      },
      {
        title: "‚ùå Quanto tempo leva pra dar resultado?",
        question: "O que faria voc√™ sentir que j√° est√° avan√ßando nos primeiros dias?",
        response: "Logo nos primeiros dias, voc√™ j√° sente mais clareza, dire√ß√£o e apoio ‚Äî e isso j√° muda o seu jogo. Quando voc√™ come√ßa a se ver com novas possibilidades, o resultado vem de dentro pra fora."
      }
    ]
  },
  S: {
    label: "üü© Perfil Est√°vel",
    approach: "üéØ Acolha, ofere√ßa passo a passo e seguran√ßa",
    trigger: "üî• Seguran√ßa, suporte, const√¢ncia, processo claro",
    script: {
      objetivo: {
        caracteristicas: "Pessoa leal, gentil, colaborativa, com foco em seguran√ßa, previsibilidade e ambiente harmonioso.",
        busca: "apoio, passo a passo claro, estrutura confi√°vel, relacionamento de confian√ßa",
        evita: "press√£o, mudan√ßas bruscas, decis√µes r√°pidas, ambiente agressivo",
        foco: "Seguran√ßa e estabilidade no processo"
      },
      abertura: {
        titulo: "ABERTURA ACOLHEDORA (CONEX√ÉO)",
        script: "Oi [Nome], tudo bem? Fico feliz que a gente esteja conversando hoje, a ideia aqui √© te escutar com calma e construir algo que realmente funcione pra voc√™, sem pressa. A ideia n√£o √© te vender nada agora, t√°? Quero primeiro entender o que voc√™ precisa, se fizer sentido, a gente constr√≥i junto. Pode ser assim?",
        gatilhos: "Seguran√ßa, tranquilidade, confian√ßa, ritmo respeitado"
      },
      spin: {
        situacao: {
          titulo: "PERGUNTAS DE SITUA√á√ÉO (SPIN: S)",
          objetivo: "entender com cuidado o cen√°rio atual, respeitando o ritmo da pessoa",
          perguntas: [
            "Como est√° sua rotina hoje? Est√° conseguindo conciliar tudo bem?",
            "O que na sua opera√ß√£o ou rotina voc√™ sente que est√° fluindo bem?",
            "E o que voc√™ gostaria que estivesse mais organizado ou mais leve?"
          ],
          gatilhos: "Acolhimento, escuta ativa, estrutura"
        },
        problema: {
          titulo: "PERGUNTAS DE PROBLEMA (SPIN: P)",
          objetivo: "levantar os pontos de insatisfa√ß√£o com empatia e foco em solu√ß√µes pr√°ticas",
          perguntas: [
            "Teve alguma experi√™ncia anterior que te deixou inseguro ou frustrado em tentar resolver isso?",
            "Voc√™ j√° tentou algo pra ajustar esse ponto? Como foi essa experi√™ncia?",
            "O que tem te travado de colocar as mudan√ßas em pr√°tica hoje?"
          ],
          gatilhos: "Confian√ßa, cuidado, valida√ß√£o emocional"
        },
        implicacao: {
          titulo: "PERGUNTAS DE IMPLICA√á√ÉO (SPIN: I)",
          objetivo: "mostrar com leveza as consequ√™ncias de seguir sem resolver os desafios",
          perguntas: [
            "Se as coisas seguirem do jeito que est√£o, o que voc√™ sente que pode acontecer a m√©dio prazo?",
            "E isso pode te trazer alguma preocupa√ß√£o no dia a dia?",
            "Como isso impacta sua tranquilidade ou sua confian√ßa no processo?"
          ],
          gatilhos: "Consci√™ncia emocional, antecipa√ß√£o de risco, seguran√ßa"
        },
        necessidade: {
          titulo: "PERGUNTAS DE NECESSIDADE DE SOLU√á√ÉO (SPIN: N)",
          objetivo: "ativar o desejo por uma solu√ß√£o segura, confi√°vel e que acompanhe o ritmo da pessoa",
          perguntas: [
            "Se existisse um plano bem definido, com apoio do in√≠cio ao fim, isso te traria mais seguran√ßa?",
            "Se voc√™ tivesse um acompanhamento leve, com algu√©m te orientando passo a passo, te daria mais tranquilidade de executar?"
          ],
          gatilhos: "Apoio, passo a passo, estrutura, seguran√ßa emocional"
        }
      },
      apresentacao: {
        titulo: "APRESENTA√á√ÉO DO M√âTODO",
        script: "Aqui a gente faz diferente: criamos um plano junto com voc√™, respeitando seu ritmo, com acompanhamento real, de perto. √â um processo estruturado, sem press√£o ‚Äî e que funciona justamente por ser cont√≠nuo.",
        gatilhos: "Clareza de processo, cuidado, apoio cont√≠nuo, previsibilidade"
      },
      chamada: {
        titulo: "CHAMADA PRA A√á√ÉO",
        script: "Se for o momento certo, posso te mostrar como seria esse plano na pr√°tica, sem pressa. Posso seguir?"
      },
      encaminhamento: {
        titulo: "ENCAMINHAMENTO (FECHAMENTO PARCIAL)",
        script: "Podemos agendar um pr√≥ximo passo pra te mostrar esse caminho com mais calma, tudo bem assim pra voc√™?"
      }
    },
    objections: [
      {
        title: "‚ùå J√° tentei de tudo e nada funciona",
        question: "O que mais te incomodou nas solu√ß√µes anteriores? Foi o jeito como foi conduzido?",
        response: "Esse sentimento de frustra√ß√£o √© mais comum do que parece. √â por isso que aqui o processo √© constru√≠do passo a passo, com acompanhamento de perto e no seu ritmo. A gente n√£o imp√µe, a gente constr√≥i junto. Se quiser, te mostro como adaptamos tudo √† sua realidade."
      },
      {
        title: "‚ùå Mas ser√° que isso serve pra mim?",
        question: "O que te faria se sentir mais seguro(a) de que isso pode funcionar pra voc√™?",
        response: "Esse processo foi pensado pra funcionar com calma e const√¢ncia. N√£o √© sobre mudar tudo de uma vez ‚Äî √© sobre encaixar, passo a passo, no que j√° funciona na sua vida. A gente caminha junto com voc√™, sem pressa e com solidez."
      }
    ]
  },
  C: {
    label: "üü¶ Perfil Conforme",
    approach: "üéØ Traga l√≥gica, processo e prova social",
    trigger: "üî• Dados, m√©todo validado, clareza t√©cnica",
    script: {
      objetivo: {
        caracteristicas: "Pessoa anal√≠tica, l√≥gica, objetiva, exigente e cr√≠tica.",
        busca: "dados concretos, processo validado, prova t√©cnica, autonomia com seguran√ßa",
        evita: "exageros, emo√ß√µes exageradas, press√£o, informa√ß√£o vaga",
        foco: "An√°lise e valida√ß√£o baseada em dados"
      },
      abertura: {
        titulo: "ABERTURA CLARA E OBJETIVA",
        script: "Ol√° [Nome], tudo bem? Obrigado por estar aqui. Meu objetivo com essa conversa √© entender o seu cen√°rio atual e, com base em dados e evid√™ncias, te apresentar uma solu√ß√£o, se fizer sentido. Posso conduzir dessa forma? Voc√™ tem um tempo reservado para essa conversa? Assim posso respeitar seu planejamento.",
        gatilhos: "Autonomia, l√≥gica, clareza, respeito ao tempo"
      },
      spin: {
        situacao: {
          titulo: "PERGUNTAS DE SITUA√á√ÉO (SPIN: S)",
          objetivo: "compreender o funcionamento atual com foco em fatos, processos e n√∫meros",
          perguntas: [
            "Como est√° estruturada sua rotina de trabalho hoje? Voc√™ tem processos bem definidos?",
            "Atualmente, como voc√™ mede o desempenho do seu neg√≥cio? H√° m√©tricas que acompanha de forma regular?",
            "O que est√° funcionando dentro das expectativas e o que tem ficado aqu√©m?"
          ],
          gatilhos: "Racionalidade, processo, m√©tricas"
        },
        problema: {
          titulo: "PERGUNTAS DE PROBLEMA (SPIN: P)",
          objetivo: "identificar os pontos cr√≠ticos e falhas de processo com clareza e m√©todo",
          perguntas: [
            "Quais pontos voc√™ identificou como gargalos operacionais ou estrat√©gicos?",
            "Voc√™ j√° implementou alguma solu√ß√£o? Qual foi o crit√©rio de escolha e qual foi o resultado mensur√°vel?",
            "Quais s√£o hoje os maiores riscos ou vulnerabilidades que voc√™ identifica no seu processo?"
          ],
          gatilhos: "L√≥gica, controle, melhoria cont√≠nua"
        },
        implicacao: {
          titulo: "PERGUNTAS DE IMPLICA√á√ÉO (SPIN: I)",
          objetivo: "evidenciar com precis√£o os impactos negativos da situa√ß√£o atual",
          perguntas: [
            "Se esses pontos permanecerem sem ajustes, quais preju√≠zos voc√™ projeta nos pr√≥ximos meses?",
            "Essas falhas podem comprometer indicadores como lucratividade, produtividade ou previsibilidade?",
            "Voc√™ j√° analisou o impacto financeiro da inefici√™ncia nesses pontos?"
          ],
          gatilhos: "Preven√ß√£o, consequ√™ncia l√≥gica, risco calculado"
        },
        necessidade: {
          titulo: "PERGUNTAS DE NECESSIDADE DE SOLU√á√ÉO (SPIN: N)",
          objetivo: "despertar o desejo por uma solu√ß√£o t√©cnica, embasada e mensur√°vel",
          perguntas: [
            "Se fosse poss√≠vel ter um plano estruturado com crit√©rios objetivos, voc√™ gostaria de avaliar?",
            "Se eu te apresentar uma solu√ß√£o validada, com dados, benchmarks e estudos de caso semelhantes ao seu, faria sentido analisar juntos?"
          ],
          gatilhos: "Valida√ß√£o, l√≥gica, m√©todo, benchmark"
        }
      },
      apresentacao: {
        titulo: "APRESENTA√á√ÉO DO M√âTODO",
        script: "Pelo que voc√™ descreveu, o cen√°rio exige uma solu√ß√£o com foco em efici√™ncia, estrutura e resultado mensur√°vel. O m√©todo que aplicamos √© baseado em dados, possui etapas validadas e j√° foi utilizado com perfis similares ao seu, com melhoria comprovada em [exemplo t√©cnico].",
        gatilhos: "Compara√ß√£o t√©cnica, prova social com l√≥gica, benchmarks"
      },
      chamada: {
        titulo: "CHAMADA PRA A√á√ÉO",
        script: "Queremos seguir com voc√™ dentro de um plano baseado em diagn√≥stico, e n√£o achismo. Se quiser, posso te mostrar agora a estrutura completa e as etapas seguintes."
      },
      encaminhamento: {
        titulo: "ENCAMINHAMENTO (FECHAMENTO PARCIAL)",
        script: "Podemos seguir com o pr√≥ximo passo e te enviar o detalhamento t√©cnico do processo para an√°lise com calma. Voc√™ prefere isso por e-mail ou quer que eu te apresente por aqui mesmo?"
      }
    },
    objections: [
      {
        title: "‚ùå J√° tentei de tudo e nada funciona",
        question: "Voc√™ conseguiria me detalhar o que tentou antes, pra eu entender onde exatamente falhou?",
        response: "Faz sentido essa d√∫vida. A maioria das abordagens n√£o parte de dados nem se adapta ao seu perfil. Tenho um comparativo com os principais erros que levam √† frustra√ß√£o e o porqu√™ esse m√©todo tem taxa de resultado acima da m√©dia. Posso te mostrar com clareza."
      },
      {
        title: "‚ùå Mas ser√° que isso serve pra mim?",
        question: "Quer que eu te mostre casos reais de perfis como o seu que aplicaram e tiveram resultado mensur√°vel?",
        response: "Entendo sua d√∫vida. Posso te mostrar an√°lises de pessoas com o mesmo perfil ‚Äî inclusive como aplicaram o m√©todo, os ajustes feitos e os resultados exatos. Isso te d√° clareza pra decidir com confian√ßa, sem achismo."
      }
    ]
  }
};

export default function CXconvers√£o() {
  const [selected, setSelected] = useState([]);
  const [expandedProfiles, setExpandedProfiles] = useState([]);
  const [expandedObjections, setExpandedObjections] = useState({});
  const [expandedScripts, setExpandedScripts] = useState({});
  const [viewMode, setViewMode] = useState({});

  const handleCheck = (label, profile) => {
    const exists = selected.find((s) => s.label === label);
    setSelected(exists ? selected.filter((s) => s.label !== label) : [...selected, { label, profile }]);
  };

  const toggleExpand = (profile) => {
    setExpandedProfiles((prev) =>
      prev.includes(profile) ? prev.filter((p) => p !== profile) : [...prev, profile]
    );
    if (!expandedProfiles.includes(profile) && !viewMode[profile]) {
      setViewMode(prev => ({ ...prev, [profile]: 'objections' }));
    }
  };

  const toggleViewMode = (profile, mode) => {
    setViewMode(prev => ({ ...prev, [profile]: mode }));
  };

  const toggleObjection = (profile, index) => {
    const key = `${profile}-${index}`;
    setExpandedObjections(prev => ({
      ...prev,
      [key]: !prev[key]
    }));
  };

  const toggleScript = (profile, section) => {
    const key = `${profile}-${section}`;
    setExpandedScripts(prev => ({
      ...prev,
      [key]: !prev[key]
    }));
  };

  const profileCount = selected.reduce((acc, cur) => {
    acc[cur.profile] = (acc[cur.profile] || 0) + 1;
    return acc;
  }, {});

  const sortedProfiles = Object.keys(profileCount).sort((a, b) => profileCount[b] - profileCount[a]);

  return (
    <div style={{
      maxWidth: '1200px',
      margin: '0 auto',
      padding: '1rem',
      backgroundColor: '#0c121c',
      color: 'white',
      fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
      minHeight: '100vh'
    }}>
      <div style={{
        textAlign: 'center',
        fontSize: '2.5rem',
        marginBottom: '0.5rem',
        color: '#d2bc8f'
      }}>
        CXconvers√£o
      </div>
      <p style={{
        textAlign: 'center',
        color: '#888',
        fontSize: '1.2rem',
        marginBottom: '2rem'
      }}>
        Radar Comportamental em Calls 1:1
      </p>

      {/* Marcadores de Observa√ß√£o */}
      <div style={{
        background: '#1a2332',
        border: '1px solid #333',
        borderRadius: '10px',
        padding: '1.5rem',
        marginBottom: '1.5rem',
        transition: 'all 0.3s ease'
      }}>
        <h2 style={{ color: '#d2bc8f' }}>Marque os sinais observados durante a call:</h2>
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
          gap: '0.5rem',
          marginTop: '1rem'
        }}>
          {markers.map((item, index) => (
            <label key={index} style={{
              display: 'flex',
              alignItems: 'center',
              padding: '0.5rem',
              borderRadius: '6px',
              cursor: 'pointer',
              transition: 'background-color 0.2s ease'
            }}
            onMouseEnter={(e) => e.target.style.backgroundColor = 'rgba(210, 188, 143, 0.1)'}
            onMouseLeave={(e) => e.target.style.backgroundColor = 'transparent'}
            >
              <input
                type="checkbox"
                onChange={() => handleCheck(item.label, item.profile)}
                checked={selected.some((s) => s.label === item.label)}
                style={{
                  width: '18px',
                  height: '18px',
                  marginRight: '0.75rem',
                  accentColor: '#d2bc8f'
                }}
              />
              {item.label}
            </label>
          ))}
        </div>
      </div>

      {/* An√°lise de Perfis */}
      {sortedProfiles.length > 0 && (
        <div>
          <h2 style={{textAlign: 'center', marginBottom: '2rem'}}>
            üéØ An√°lise de Perfil Comportamental
          </h2>
          
          {sortedProfiles.map((profileKey) => {
            const suggestion = suggestions[profileKey];
            const count = profileCount[profileKey];
            
            return (
              <div key={profileKey} style={{
                background: '#1a2332',
                border: '1px solid #333',
                borderLeft: profileKey === 'D' ? '4px solid #ff6b6b' :
                           profileKey === 'I' ? '4px solid #ffd43b' :
                           profileKey === 'S' ? '4px solid #51cf66' :
                           '4px solid #339af0',
                borderRadius: '10px',
                padding: '1.5rem',
                marginBottom: '1.5rem'
              }}>
                <div style={{
                  display: 'flex',
                  justifyContent: 'space-between',
                  alignItems: 'flex-start',
                  marginBottom: '1rem',
                  flexWrap: 'wrap',
                  gap: '1rem'
                }}>
                  <div style={{ flex: 1 }}>
                    <h2 style={{ color: '#d2bc8f', margin: '0 0 0.5rem 0' }}>
                      {suggestion.label} ({count} indicadores)
                    </h2>
                    <p>{suggestion.approach}</p>
                    <p>{suggestion.trigger}</p>
                  </div>
                  <button 
                    onClick={() => toggleExpand(profileKey)}
                    style={{
                      background: '#d2bc8f',
                      color: '#0c121c',
                      border: 'none',
                      padding: '0.75rem 1.5rem',
                      borderRadius: '8px',
                      fontWeight: 'bold',
                      cursor: 'pointer',
                      transition: 'all 0.3s ease',
                      whiteSpace: 'nowrap'
                    }}
                    onMouseEnter={(e) => {
                      e.target.style.background = '#e6d0a3';
                      e.target.style.transform = 'translateY(-2px)';
                    }}
                    onMouseLeave={(e) => {
                      e.target.style.background = '#d2bc8f';
                      e.target.style.transform = 'translateY(0)';
                    }}
                  >
                    {expandedProfiles.includes(profileKey) ? 'Ocultar Conte√∫do' : 'Ver Conte√∫do'}
                  </button>
                </div>
                
                {expandedProfiles.includes(profileKey) && (
                  <div style={{marginTop: '1.5rem'}}>
                    {/* Bot√µes para alternar entre Obje√ß√µes e Scripts */}
                    <div style={{display: 'flex', gap: '1rem', marginBottom: '1.5rem', flexWrap: 'wrap'}}>
                      <button 
                        onClick={() => toggleViewMode(profileKey, 'objections')}
                        style={{
                          background: viewMode[profileKey] === 'objections' || !viewMode[profileKey] ? '#d2bc8f' : '#666',
                          color: viewMode[profileKey] === 'objections' || !viewMode[profileKey] ? '#0c121c' : 'white',
                          border: 'none',
                          padding: '0.75rem 1.5rem',
                          borderRadius: '8px',
                          fontWeight: 'bold',
                          cursor: 'pointer',
                          transition: 'all 0.3s ease'
                        }}
                      >
                        üí¨ Obje√ß√µes
                      </button>
                      <button 
                        onClick={() => toggleViewMode(profileKey, 'scripts')}
                        style={{
                          background: viewMode[profileKey] === 'scripts' ? '#d2bc8f' : '#666',
                          color: viewMode[profileKey] === 'scripts' ? '#0c121c' : 'white',
                          border: 'none',
                          padding: '0.75rem 1.5rem',
                          borderRadius: '8px',
                          fontWeight: 'bold',
                          cursor: 'pointer',
                          transition: 'all 0.3s ease'
                        }}
                      >
                        üìã Script de Conex√£o
                      </button>
                    </div>

                    {/* Se√ß√£o de Obje√ß√µes */}
                    {(viewMode[profileKey] === 'objections' || !viewMode[profileKey]) && (
                      <div>
                        <h3>üí¨ Obje√ß√µes e Respostas Calibradas:</h3>
                        {suggestion.objections.map((objection, index) => (
                          <div key={index} style={{
                            background: '#2a3441',
                            border: '1px solid #444',
                            borderRadius: '8px',
                            padding: '1rem',
                            marginBottom: '1rem'
                          }}>
                            <div 
                              onClick={() => toggleObjection(profileKey, index)}
                              style={{
                                cursor: 'pointer', 
                                display: 'flex', 
                                justifyContent: 'space-between', 
                                alignItems: 'center',
                                color: '#ff6b6b',
                                fontWeight: 'bold',
                                marginBottom: '0.5rem'
                              }}
                            >
                              <span>{objection.title}</span>
                              <span>{expandedObjections[`${profileKey}-${index}`] ? '‚ñº' : '‚ñ∂'}</span>
                            </div>
                            
                            {expandedObjections[`${profileKey}-${index}`] && (
                              <div style={{marginTop: '1rem'}}>
                                <div style={{
                                  background: '#1a2332',
                                  borderLeft: '4px solid #4dabf7',
                                  padding: '0.75rem',
                                  margin: '0.5rem 0',
                                  borderRadius: '0 6px 6px 0'
                                }}>
                                  <div style={{ color: '#4dabf7', fontWeight: 'bold', fontSize: '0.9rem', marginBottom: '0.25rem' }}>
                                    üí¨ Pergunta Calibrada:
                                  </div>
                                  <em>"{objection.question}"</em>
                                </div>
                                <div style={{
                                  background: '#1a2332',
                                  borderLeft: '4px solid #51cf66',
                                  padding: '0.75rem',
                                  margin: '0.5rem 0',
                                  borderRadius: '0 6px 6px 0'
                                }}>
                                  <div style={{ color: '#51cf66', fontWeight: 'bold', fontSize: '0.9rem', marginBottom: '0.25rem' }}>
                                    üí° Resposta Adaptada:
                                  </div>
                                  "{objection.response}"
                                </div>
                              </div>
                            )}
                          </div>
                        ))}
                      </div>
                    )}

                    {/* Se√ß√£o de Scripts */}
                    {viewMode[profileKey] === 'scripts' && (
                      <div>
                        <h3>üìã Script de Conex√£o e Diagn√≥stico:</h3>
                        
                        {/* Objetivo do Perfil */}
                        <div style={{
                          background: '#1a2332',
                          border: '1px solid #444',
                          borderRadius: '8px',
                          padding: '1rem',
                          marginBottom: '1rem'
                        }}>
                          <div 
                            onClick={() => toggleScript(profileKey, 'objetivo')}
                            style={{
                              cursor: 'pointer', 
                              display: 'flex', 
                              justifyContent: 'space-between', 
                              alignItems: 'center',
                              color: '#d2bc8f',
                              fontWeight: 'bold',
                              marginBottom: '0.5rem'
                            }}
                          >
                            <span><strong>üéØ OBJETIVO DO PERFIL</strong></span>
                            <span>{expandedScripts[`${profileKey}-objetivo`] ? '‚ñº' : '‚ñ∂'}</span>
                          </div>
                          
                          {expandedScripts[`${profileKey}-objetivo`] && (
                            <div style={{marginTop: '1rem', padding: '1rem', background: '#2a3441', borderRadius: '8px'}}>
                              <p><strong>Caracter√≠sticas:</strong> {suggestion.script.objetivo.caracteristicas}</p>
                              <p><strong>Busca:</strong> {suggestion.script.objetivo.busca}</p>
                              <p><strong>Evita:</strong> {suggestion.script.objetivo.evita}</p>
                              <p><strong>Foco:</strong> {suggestion.script.objetivo.foco}</p>
                            </div>
                          )}
                        </div>

                        {/* Abertura */}
                        <div style={{
                          background: '#1a2332',
                          border: '1px solid #444',
                          borderRadius: '8px',
                          padding: '1rem',
                          marginBottom: '1rem'
                        }}>
                          <div 
                            onClick={() => toggleScript(profileKey, 'abertura')}
                            style={{
                              cursor: 'pointer', 
                              display: 'flex', 
                              justifyContent: 'space-between', 
                              alignItems: 'center',
                              color: '#d2bc8f',
                              fontWeight: 'bold',
                              marginBottom: '0.5rem'
                            }}
                          >
                            <span><strong>üöÄ {suggestion.script.abertura.titulo}</strong></span>
                            <span>{expandedScripts[`${profileKey}-abertura`] ? '‚ñº' : '‚ñ∂'}</span>
                          </div>
                          
                          {expandedScripts[`${profileKey}-abertura`] && (
                            <div style={{marginTop: '1rem', padding: '1rem', background: '#2a3441', borderRadius: '8px'}}>
                              <div style={{background: '#1a2332', padding: '1rem', borderRadius: '6px', marginBottom: '1rem'}}>
                                <strong>Script:</strong><br />
                                <em>"{suggestion.script.abertura.script}"</em>
                              </div>
                              <p><strong>üéØ Gatilhos:</strong> {suggestion.script.abertura.gatilhos}</p>
                              {suggestion.script.abertura.tecnica && (
                                <p><strong>üß† T√©cnica:</strong> {suggestion.script.abertura.tecnica}</p>
                              )}
                            </div>
                          )}
                        </div>

                        {/* SPIN Sections */}
                        {['situacao', 'problema', 'implicacao', 'necessidade'].map((spinType) => (
                          <div key={spinType} style={{
                            background: '#1a2332',
                            border: '1px solid #444',
                            borderRadius: '8px',
                            padding: '1rem',
                            marginBottom: '1rem'
                          }}>
                            <div 
                              onClick={() => toggleScript(profileKey, spinType)}
                              style={{
                                cursor: 'pointer', 
                                display: 'flex', 
                                justifyContent: 'space-between', 
                                alignItems: 'center',
                                color: '#d2bc8f',
                                fontWeight: 'bold',
                                marginBottom: '0.5rem'
                              }}
                            >
                              <span><strong>
                                {spinType === 'situacao' && 'üìä'}
                                {spinType === 'problema' && '‚ùó'}
                                {spinType === 'implicacao' && '‚ö†Ô∏è'}
                                {spinType === 'necessidade' && '‚úÖ'}
                                {' ' + suggestion.script.spin[spinType].titulo}
                              </strong></span>
                              <span>{expandedScripts[`${profileKey}-${spinType}`] ? '‚ñº' : '‚ñ∂'}</span>
                            </div>
                            
                            {expandedScripts[`${profileKey}-${spinType}`] && (
                              <div style={{marginTop: '1rem', padding: '1rem', background: '#2a3441', borderRadius: '8px'}}>
                                <p><strong>Objetivo:</strong> {suggestion.script.spin[spinType].objetivo}</p>
                                <div style={{marginTop: '1rem'}}>
                                  <strong>Perguntas:</strong>
                                  <ul style={{marginTop: '0.5rem'}}>
                                    {suggestion.script.spin[spinType].perguntas.map((pergunta, idx) => (
                                      <li key={idx} style={{marginBottom: '0.5rem'}}>
                                        <em>"{pergunta}"</em>
                                      </li>
                                    ))}
                                  </ul>
                                </div>
                                <p><strong>üéØ Gatilhos:</strong> {suggestion.script.spin[spinType].gatilhos}</p>
                              </div>
                            )}
                          </div>
                        ))}

                        {/* Outras se√ß√µes do script */}
                        {['apresentacao', 'chamada', 'encaminhamento'].map((section) => (
                          <div key={section} style={{
                            background: '#1a2332',
                            border: '1px solid #444',
                            borderRadius: '8px',
                            padding: '1rem',
                            marginBottom: '1rem'
                          }}>
                            <div 
                              onClick={() => toggleScript(profileKey, section)}
                              style={{
                                cursor: 'pointer', 
                                display: 'flex', 
                                justifyContent: 'space-between', 
                                alignItems: 'center',
                                color: '#d2bc8f',
                                fontWeight: 'bold',
                                marginBottom: '0.5rem'
                              }}
                            >
                              <span><strong>
                                {section === 'apresentacao' && 'üí°'}
                                {section === 'chamada' && 'üéØ'}
                                {section === 'encaminhamento' && 'üîÑ'}
                                {' ' + suggestion.script[section].titulo}
                              </strong></span>
                              <span>{expandedScripts[`${profileKey}-${section}`] ? '‚ñº' : '‚ñ∂'}</span>
                            </div>
                            
                            {expandedScripts[`${profileKey}-${section}`] && (
                              <div style={{marginTop: '1rem', padding: '1rem', background: '#2a3441', borderRadius: '8px'}}>
                                <div style={{background: '#1a2332', padding: '1rem', borderRadius: '6px', marginBottom: section === 'apresentacao' ? '1rem' : '0'}}>
                                  <strong>Script:</strong><br />
                                  <em>"{suggestion.script[section].script}"</em>
                                </div>
                                {section === 'apresentacao' && (
                                  <p><strong>üéØ Gatilhos:</strong> {suggestion.script[section].gatilhos}</p>
                                )}
                              </div>
                            )}
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                )}
              </div>
            );
          })}
        </div>
      )}

      {/* Estado inicial */}
      {sortedProfiles.length === 0 && (
        <div style={{
          textAlign: 'center',
          padding: '3rem',
          color: '#888',
          background: '#1a2332',
          borderRadius: '10px',
          border: '2px dashed #444'
        }}>
          <h2>An√°lise em Tempo Real</h2>
          <p>Marque os sinais comportamentais observados para receber as estrat√©gias de convers√£o personalizadas.</p>
        </div>
      )}

      {/* Rodap√© */}
      <div style={{marginTop: '2rem', textAlign: 'center'}}>
        <p style={{color: '#888', fontSize: '0.9rem'}}>
          CXconvers√£o - Sistema de An√°lise Comportamental para Convers√£o em Calls
        </p>
      </div>
    </div>
  );
}
